name: Terraform Plan
on: 
  pull_request:
    branches: 
      - main
jobs:
  Package-And-Plan-Lambda-Function:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository content
        uses: actions/checkout@v2
      
      - name: Create lambda.zip
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -t .
          zip -r lambda.zip * -x "bin/*" requirements.txt setup.cfg
      
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -var AWS_ACCESS_KEY=${{secrets.AWS_ACCESS_KEY}} -var AWS_SECRET_KEY=${{secrets.AWS_SECRET_KEY}} -var TWITTER_ACCESS_TOKEN=${{secrets.TWITTER_ACCESS_TOKEN}} -var TWITTER_ACCESS_TOKEN_SECRET=${{secrets.TWITTER_ACCESS_TOKEN_SECRET}} -var TWITTER_CONSUMER_API_KEY=${{secrets.TWITTER_CONSUMER_API_KEY}} -var TWITTER_CONSUMER_API_SECRET=${{secrets.TWITTER_CONSUMER_API_SECRET}} -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcom }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })


